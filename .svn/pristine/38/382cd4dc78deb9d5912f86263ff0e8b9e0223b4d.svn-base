package kr.or.warehouse.controller.rest;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.CommunityVO;
import kr.or.warehouse.service.CommunityService;

@RestController
@RequestMapping("/community")
public class CommunityRestController {
	
	@Autowired
	private CommunityService communityService;
	
	@RequestMapping("/communityList")
	public ResponseEntity<Map<String, Object>> manualList(Criteria cri){
		ResponseEntity<Map<String, Object>> result = null;

		Map<String, Object> dataMap = null;
		try {
			dataMap = communityService.getCommunityList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataMap, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}

		return result;

	}
	
	@RequestMapping("/joinCommuList")
	public ResponseEntity<List<CommunityVO>> joinCommuList(int eno){
		ResponseEntity<List<CommunityVO>> result = null;
		
		List<CommunityVO> joinCommuList = null;
		try {
			joinCommuList = communityService.getJoinCommuList(eno);
			result = new ResponseEntity<List<CommunityVO>>(joinCommuList, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<List<CommunityVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping("/subCommuList")
	public ResponseEntity<List<CommunityVO>> subCommuList(int eno){
		ResponseEntity<List<CommunityVO>> result = null;
		
		List<CommunityVO> subCommuList = null;
		try {
			subCommuList = communityService.getSubCommuList(eno);
			System.out.println(subCommuList);
			result = new ResponseEntity<List<CommunityVO>>(subCommuList, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<List<CommunityVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping("/approveCommuList")
	public ResponseEntity<List<CommunityVO>> approveCommuList(int eno){
		ResponseEntity<List<CommunityVO>> result = null;
		
		List<CommunityVO> approveCommuList = null;
		try {
			approveCommuList = communityService.getApproveCommuList(eno);
			System.out.println(approveCommuList);
			result = new ResponseEntity<List<CommunityVO>>(approveCommuList, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<List<CommunityVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping("/bestCommuList")
	public ResponseEntity<List<CommunityVO>> bestCommuList(int eno){
		ResponseEntity<List<CommunityVO>> result = null;
		
		List<CommunityVO> bestCommuList = null;
		try {
			bestCommuList = communityService.getBestCommuList(eno);
			result = new ResponseEntity<List<CommunityVO>>(bestCommuList, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<List<CommunityVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping(value="/removeJoinCommu",produces="text/plain;charset=utf-8")
	public ResponseEntity<String> removeJoinCommu(CommunityVO community){
		ResponseEntity<String> result = null;
		
		try {
			communityService.removeJoinCommu(community);
			result = new ResponseEntity<String>("가입취소 되었습니다.", HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<String>("가입취소 실패하였습니다.", HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping(value="/removeApproveCommu", produces="text/plain;charset=utf-8")
	public ResponseEntity<String> removeApproveCommu(String cmno){
		ResponseEntity<String> result = null;
		
		try {
			communityService.removeCommu(cmno);
			result = new ResponseEntity<String>("개설취소 되었습니다.", HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<String>("개설취소 실패하였습니다.", HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}
	
	@RequestMapping(value="/insertSubCommu", produces="text/plain;charset=utf-8")
	public ResponseEntity<String> insertSubCommu(CommunityVO community){
		ResponseEntity<String> result = null;
		String check = null;
		try {
			check = communityService.insertSubCommu(community);
			result = new ResponseEntity<String>(check, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			result = new ResponseEntity<String>(check, HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return result;
		
	}

}

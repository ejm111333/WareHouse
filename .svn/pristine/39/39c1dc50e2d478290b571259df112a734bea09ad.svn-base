package kr.or.warehouse.controller.view;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.MenuVO;
import kr.or.warehouse.service.WorkService;

@Controller
@RequestMapping("/work")
public class WorkController {
	@Autowired
	private WorkService workService;

	@RequestMapping("/main")
	public String main(Model model) throws Exception{
		String url = "work/main";

		return url;
	}

	@RequestMapping("/myWorkList")
	public String myWorkList(Model model, Criteria cri, @RequestParam(defaultValue = "0") int statusNo) throws Exception{
		String url = "work/myWorkList";

		Map<String, Integer> noneCheckCnt = null;
		noneCheckCnt = workService.getNoneCheckCnt("M113000", cri);
		System.out.println("searchType : " + cri.getSearchType());
		System.out.println("keyword : " + cri.getKeyword());
		System.out.println("page : " + cri.getPage());
		Map<String, Object> dataMap = workService.getMyWorkList(cri, statusNo);
		model.addAttribute("dataMap", dataMap);
		model.addAttribute("noneCheckCnt", noneCheckCnt);

		return url;
	}

	@RequestMapping("/toReqList")
	public String toReqList(Model model, Criteria cri) throws Exception{
		String url = "work/toReqList";

		Map<String, Integer> noneCheckCnt = null;
		noneCheckCnt = workService.getNoneCheckCnt("M114000", cri);

		model.addAttribute("noneCheckCnt", noneCheckCnt);

		return url;
	}

	@RequestMapping("/depWorkList")
	public String depWorkList(Model model, Criteria cri) throws Exception{
		String url = "work/depWorkList";

		Map<String, Integer> noneCheckCnt = null;
		noneCheckCnt = workService.getNoneCheckCnt("M115000",cri);

		model.addAttribute("noneCheckCnt", noneCheckCnt);

		return url;
	}

	@RequestMapping("/declareList")
	public String declareList() throws Exception{
		String url = "work/declareList";

		return url;
	}

	@RequestMapping("/waitDetail")
	public String waitDetail() throws Exception{
		String url = "work/waitDetail";


		return url;
	}

	@RequestMapping("/workDetailGo")
	public String workDetailGo() throws Exception{
		String url = "work/workDetail";

		return url;
	}

	@RequestMapping("/workDetail")
	public String workDetail(@RequestHeader Map<String, Object> requestHeader, Model model) throws Exception{
		String url = "work/workDetail";

		String refer = requestHeader.get("referer").toString();
		String referMcode = refer.substring(refer.indexOf("=") + 1);

		if(referMcode.contains("M13")) {
			model.addAttribute("refer", "knowhow");
		}

		return url;
	}

	@RequestMapping("/reportRegistForm")
	public String reportRegistForm() throws Exception{
		String url = "work/reportRegistForm";

		return url;
	}

	@RequestMapping("/proceedRegistForm")
	public String proceedRegistForm() throws Exception{
		String url = "work/proceedRegistForm";

		return url;
	}

	@RequestMapping("/toReqWorkDetailGo")
	public String toReqWorkDetail() throws Exception{
		String url = "work/toReqWorkDetail";

		return url;
	}

	@RequestMapping("/workRegistForm")
	public String workRegistForm() throws Exception{
		String url = "work/workRegistForm";

		return url;
	}

}

package kr.or.warehouse.controller.view;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.ContactgrVO;
import kr.or.warehouse.dto.DepartmentVO;
import kr.or.warehouse.dto.MycontactVO;
import kr.or.warehouse.service.ContactService;

@Controller
@RequestMapping("/contact")
public class ContactController {

	@Autowired
	private ContactService service;

	@RequestMapping("/main")
	 public ModelAndView main(Criteria cri,ModelAndView mnv)throws Exception{
		/* public String main()throws Exception{ */

		  String url="contact/main";

		  Map<String,Object> dataMap = service.getContactList(cri);

		  mnv.addObject("dataMap",dataMap); mnv.setViewName(url);

		  return mnv;

		/*
		 * String url="contact/main"; return url;
		 */
	}


	@RequestMapping(value="/groupRegist",method=RequestMethod.POST,produces = "text/plain; charset=utf-8")
	public String regist(ContactgrVO contactgr, MycontactVO mycontact,     @RequestParam("empList")List<String> empList ,
		HttpServletRequest request, RedirectAttributes rttr)throws Exception{
		String url="redirect:/contact/personalList.do";
		//contactgr.setEno(14310056);

		//그룹 저장
		String cogroupcode = service.regist(contactgr);

		//그룹 사원정보 저장
		System.out.println(empList);
		service.registInfo(cogroupcode, empList);

		rttr.addFlashAttribute("from","regist");

		return url;
	}



	@RequestMapping(value="/registGroupAssign",method=RequestMethod.POST,produces = "text/plain; charset=utf-8")
	public String registGroupAssign(ContactgrVO contactgr, MycontactVO mycontact,  String cogroupcode,
			@RequestParam("empList")List<String> empList ,
			HttpServletRequest request, RedirectAttributes rttr)throws Exception{

		String url="redirect:/contact/personalList.do";
		//contactgr.setEno(14310056);

		//그룹 사원정보 저장
		service.registInfo(cogroupcode, empList);

		rttr.addFlashAttribute("from","regist");

		return url;
	}


	@RequestMapping("/deptList")
	public String deptList()throws Exception{
		String url="contact/deptList";
		return url;
	}

	@RequestMapping("/personalList")
	public ModelAndView personalList(Criteria cri, ModelAndView mnv)throws Exception{
		String url="contact/personalList";

		 Map<String,Object> groupMap = service.getContactGroupList(cri); //그룹만 있는 리스트
		 Map<String,Object> personalMap = service.getPersonalList(cri); //개인주소록 전체리스트

		  mnv.addObject("groupMap",groupMap);
		  mnv.addObject("personalMap", personalMap);

		  mnv.setViewName(url);

		  return mnv;

	}


	@RequestMapping(value = "/remove", method = RequestMethod.POST, produces = "text/plain; charset=utf-8")
	public String remove(RedirectAttributes rttr, String cogroupcode, @RequestParam List<String> empList) throws Exception{
		String url = "redirect:/contact/personalList.do";
		//System.out.println("cogroupcode : " + cogroupcode);
		//System.out.println("empList : " + empList);
		service.remove(empList,cogroupcode);

		rttr.addFlashAttribute("from","remove");

		return url;
	}





	@RequestMapping("/organization")
	public String organization()throws Exception{
		String url="contact/organization";
		return url;
	}




}

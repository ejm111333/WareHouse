package kr.or.warehouse.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.RowBounds;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.command.PageMaker;
import kr.or.warehouse.controller.view.OrganizationNode;
import kr.or.warehouse.dao.MentoringDAO;
import kr.or.warehouse.dto.DepartmentVO;
import kr.or.warehouse.dto.EmployeeVO;
import kr.or.warehouse.dto.MentoringVO;
import kr.or.warehouse.dto.SubMentoringVO;
import kr.or.warehouse.dto.WorkVO;


@Service
public class MentoringServiceImpl implements MentoringService{
	@Autowired
	private MentoringDAO mentoringDAO;

	@Override
	public List<SubMentoringVO> getMyMentoList(int eno) throws Exception {
	//public Map<String,Object> getMyMentoList(Criteria cri, int eno) throws Exception {
		List<SubMentoringVO> mentoList = mentoringDAO.selectMyMento(eno);

//		List<SubMentoringVO> mentoList = mentoringDAO.selectMyMento(cri, eno);
//
//		Map<String, Object> dataMap = new HashMap<String, Object>();
//
//		int mentoCount = mentoringDAO.selectMyMentoCount(cri, eno);
//
//		PageMaker pageMaker = new PageMaker();
//		pageMaker.setCri(cri);
//		pageMaker.setTotalCount(mentoCount);
//
//		dataMap.put("mentoList", mentoList);
//		dataMap.put("pageMaker", pageMaker);

		return mentoList;
	}

	@Override
	public List<SubMentoringVO> getMyMenteeList(int eno) throws Exception {
	//public Map<String,Object> getMyMenteeList(Criteria cri, int eno) throws Exception {
		List<SubMentoringVO> menteeList = mentoringDAO.selectMyMentee(eno);
//		List<MentoringVO> menteeList = mentoringDAO.selectMyMentee(cri, eno);
//
//		Map<String, Object> dataMap = new HashMap<String, Object>();
//
//		int menteeCount = mentoringDAO.selectMyMenteeCount(cri, eno);
//
//		PageMaker pageMaker = new PageMaker();
//		pageMaker.setCri(cri);
//		pageMaker.setTotalCount(menteeCount);
//
//		dataMap.put("menteeList", menteeList);
//		dataMap.put("pageMaker", pageMaker);

		return menteeList;
	}

	@Override
	public List<SubMentoringVO> getMentoRank() throws Exception {
		List<SubMentoringVO> rankList = mentoringDAO.selectMentoRank();
		return rankList;
	}

	@Override
	public Map<String, Object> getSubMentoringList(Criteria cri, int eno) throws Exception {
		System.out.println("신청리스트");
		Map<String, Object> dataMap = new HashMap<String, Object>();

		List<SubMentoringVO> subMentoringList = mentoringDAO.subMentoringList(cri, eno);

		int totalCount = mentoringDAO.subMentoringListCount(cri,eno);

		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);

		dataMap.put("subMentoringList", subMentoringList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;
	}

	@Override
	public Map<String, Object> getEndMentoringList(Criteria cri, int eno) throws Exception {
		Map<String, Object> dataMap = new HashMap<String, Object>();

		List<SubMentoringVO> endMentoringList = mentoringDAO.endMentoringList(cri, eno);

		int endCount = mentoringDAO.endMentoringListCount(cri,eno);

		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(endCount);

		dataMap.put("endMentoringList", endMentoringList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;
	}

	@Override
	public List<WorkVO> getMyWorkList(int eno) throws Exception {
		System.out.println("workservice");
		List<WorkVO> myWorkList = mentoringDAO.myWorkList(eno);
		return myWorkList;
	}

	@Override
	public void apply(SubMentoringVO subMentoring) throws Exception {
		String smno = mentoringDAO.selectSmno();
		subMentoring.setSmno(smno);
		mentoringDAO.applyMentoring(subMentoring);


	}

}

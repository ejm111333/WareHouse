<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>


<script>
	$(document).on('click', 'body > aside > div > ul > li:nth-child(2) > a', function(){
		$(this).attr("href", "#");
		OpenWindow('<%=request.getContextPath()%>/work/workRegistForm.do', '새 업무', '1000', '600');
	});

// 	$(function(){
// 		setTimeout(() => {
// 			closeLoading();
// 		}, 300);
// 	});


// 	function closeLoading(){
// 		$('.preloader').css({
// 			"display" : "none"
// 		});

// 		$('.animation__shake').css({
// 			"display" : "none"
// 		})
// 	}

	function list_go(url, page, statusNo){
		var jobForm=$('#jobForm');
		jobForm.find("[name='page']").val(page);
		jobForm.find("[name='perPageNum']").val();
		jobForm.find("[name='searchType']").val($('select[name="searchType"]').val());
		jobForm.find("[name='keyword']").val($('input[name="keyword"]').val());
		jobForm.find("[name='statusNo']").val(statusNo);
		jobForm.find("[name='mCode']").val();



		jobForm.attr({
			action:url,
			method:'get'
		}).submit();
	}

	function detail_go(wstatus,wcode){
		if(wstatus == "대기" || wstatus == "이의신청"){
			OpenWindow('waitDetail.do?wcode=' + wcode, '업무상세', '1000', '800');
		}else{
			goDetail('<%= request.getContextPath()%>/work/workDetailGo.do?wcode=' + wcode, '${menu.mcode}');
		}
	}

	function getReplyList(wcode, page){
		$.ajax({
			url : '<%=request.getContextPath()%>/work/replyList.do?wcode=' + wcode + '&page=' + page,
			type : 'get',
			success : function(res){
				console.log(res.replyList)
				printReplyList(res.replyList, $('#repliesDiv'), $('#replyList-template'));
				printReplyPageMaker(res.pageMaker, $('#pagination'), $('#reply-pagination-template'))
			},
			error : function(error){
				alert("error : " , error.status);
			}
		});
	}

	function printReplyList(list, target, templateObject){
		var template=Handlebars.compile(templateObject.html());
		var html = template(list);
		$('.replyLi').remove();
		target.after(html);
	}

	function printReplyPageMaker(pageMaker, target, templateObject){
		var pageNumArray = new Array(pageMaker.endPage-pageMaker.startPage+1);
		for(var i=0;i<pageMaker.endPage-pageMaker.startPage+1;i++){
			pageNumArray[i]=pageMaker.startPage+i;
		}
		pageMaker.pageNum=pageNumArray;
		pageMaker.prevPageNum=pageMaker.startPage-1;
		pageMaker.nextPageNum=pageMaker.endPage+1;

		var template=Handlebars.compile(templateObject.html());
		var html = template(pageMaker);
		target.html("").html(html);
	}

	function returnList(refer){
		if(refer == 'M113000'){
			goPage('<%=request.getContextPath()%>/work/myWorkList.do', refer);
		}

		if(refer == 'M114000'){
			goPage('<%=request.getContextPath()%>/work/toReqList.do', refer);
		}

		if(refer == 'M115000'){
			goPage('<%=request.getContextPath()%>/work/depWorkList.do', refer);
		}
	}

	function replyRegist(wcode){
		var content = $('input[name="replyContent"]').val();
		console.log(wcode);
		console.log(content);

		$.ajax({
			url : "<%= request.getContextPath()%>/work/replyRegist.do",
			type : 'post',
			data : {
				"wcode" : wcode,
				"wrContent" : content
			},
			success:function(res){
				alert("댓글이 등록되었습니다.");
				window.location.reload();
			},
			error:function(error){
				alert("error : " , error.status);
			}

		});
	}

	var hashTagInput = $('input[name="hashTag"]');
	function myWorkModify(){
		hashTagInput.removeAttr("disabled");
		var progressInput = `
			<select class="form-control" name="progress" id="progress">
				<option value="0" ${work.wprogress eq '0' ? 'selected' : ''}>0%</option>
				<option value="10" ${work.wprogress eq '10' ? 'selected' : ''}>10%</option>
				<option value="20" ${work.wprogress eq '20' ? 'selected' : ''}>20%</option>
				<option value="30" ${work.wprogress eq '30' ? 'selected' : ''}>30%</option>
				<option value="40" ${work.wprogress eq '40' ? 'selected' : ''}>40%</option>
				<option value="50" ${work.wprogress eq '50' ? 'selected' : ''}>50%</option>
				<option value="60" ${work.wprogress eq '60' ? 'selected' : ''}>60%</option>
				<option value="70" ${work.wprogress eq '70' ? 'selected' : ''}>70%</option>
				<option value="80" ${work.wprogress eq '80' ? 'selected' : ''}>80%</option>
				<option value="90" ${work.wprogress eq '90' ? 'selected' : ''}>90%</option>
				<option value="100" ${work.wprogress eq '100' ? 'selected' : ''}>100%</option>
			</select>
		`;
		$('.project_progress').html(progressInput);

		$('.detail-menu').hide();
		$('.detail-menu-modify').css({
			"display":"flex"
		});
	}

	function returnDetail(){
		$('.detail-menu-modify').hide();
		$('.detail-menu').css({
			"display":"flex"
		});

		hashTagInput.attr("disabled","disabled");
		var progressInput = `
			<div class="progress progress-sm">
			<div class="progress-bar bg-green" role="progressbar" aria-valuenow="${work.wprogress }" aria-valuemin="0"
			aria-valuemax="100" style="width: ${work.wprogress}%"></div>
			</div>
			<small>${work.wprogress }% 완료</small>
		`;

		$('.project_progress').html(progressInput);
	}

	function myWorkModifyGo(wcode){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/myWorkModify.do",
			type:'post',
			data : {
				"wcode" : wcode,
				"hashTag" : $('input[name="hashTag"]').val(),
				"wprogress" : $('select[name="progress"]').val()
			},
			success:function(res){
				alert("내용이 수정되었습니다.");
				location.reload();
			},
			error:function(error){
				alert("error : " , error.status);
			}
		});
	}


	var newWorkManager = new Array();
	var removeWorkManager = new Array();
	function toReqModify(){


		var data;

		if('${cooperReq.result}' == 0){
			if(newWorkManager.length == 0){
				alert("담당자를 추가해주세요.");
				return;
			}

			data = {
				"wcode" : '${work.wcode}',
				"wcontent" : $('textarea[name=wcontent]').val(),
				"workManagerList" : newWorkManager,
				"wprogress" : $('select[name="wprogress"]').val(),
				"hashTag" : $('input[name="hashTag"]').val(),
				"wend" : $('input[name="wend"]').val()
			}
			cooperReqWorkModifyGo(data);
		}

		if('${objection.result}' == 0){
			if(confirm('이대로 수정하시겠습니까?')){
				data = {
						"wcode" : '${work.wcode}',
						"wcontent" : $('textarea[name=wcontent]').val(),
						"workManagerList" : removeWorkManager,
						"wprogress" : $('select[name="wprogress"]').val(),
						"hashTag" : $('input[name="hashTag"]').val(),
						"wend" : $('input[name="wend"]').val()
					}

				approveObjection(data);
			}


		}

	}

	function cooperReqWorkModifyGo(data){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/cooperReqApprove.do",
			type :'post',
			data : {
				formData : JSON.stringify(data)
			},
			success : function(res){
				alert("업무가 수정되었습니다.")
				goDetail("<%=request.getContextPath()%>/work/workDetailGo.do?wcode=${work.wcode}", '${menu.mcode}')
			},
			error : function(error){
				alert("error : " , error.status);
			}
		});
	}

	function approveObjection(data){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/objectionApprove.do",
			type :'post',
			data : {
				formData : JSON.stringify(data)
			},
			success : function(res){
				alert("업무가 수정되었습니다.")
				goDetail("<%=request.getContextPath()%>/work/workDetailGo.do?wcode=${work.wcode}", '${menu.mcode}')
			},
			error : function(error){
				alert("error : " , error.status);
			}
		});
	}

	function cooperReqGo(wcode){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/myWorkCooperReq.do",
			type:'post',
			data : {
				"wcode" : wcode,
				"content" : $('#cooperContent').val()
			},
			success:function(res){
				alert("요청이 완료되었습니다.");
				location.reload();
			},
			error:function(error){
				alert("error : " , error.status);
			}
		});
	}

	function proxyReqGo(wcode){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/myWorkProxyReq.do",
			type:'post',
			data : {
				"wcode" : wcode,
				"content" : $('#proxyContent').val()
			},
			success:function(res){
				alert("요청이 완료되었습니다.");
				location.reload();
			},
			error:function(error){
				alert("error : " , error.status);
			}
		});
	}

	function removeManager(eno){
		var removeItem = $('div[data-eno="' + eno + '"]');
		removeItem.remove();
		removeWorkManager.push(eno);
		console.log(removeWorkManager);
	}

	function addWorkManager(data){
		newWorkManager.push(data);
	}

	function workApprove(){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/workApprove.do?wcode=${work.wcode}",
			type : 'get',
			success : function(res){
				alert("업무 승인처리 되었습니다.");
				goDetail("<%=request.getContextPath()%>/work/workDetailGo.do?wcode=${work.wcode}", '${menu.mcode}')
			},
			error : function(error){
				alert("error : " , error.status);
			}
		});
	}

	function objectionGo(wstatus){
		if(wstatus == '대기'){

		}else if(wstatus == '협업요청'){
			cooperReqObj();
		}else{

		}
	}

	function cooperReqObj(){
		$.ajax({
			url : "<%=request.getContextPath()%>/work/cooperReqObj.do",
			type : 'post',
			data : {
				"wcode" : '${work.wcode}',
				"type" : $('select[name="objType"]').val(),
				"content" : $('textarea[name="objContent"]').val()
			},
			success : function(res){
				alert("이의신청이 완료되었습니다.");
				goDetail("<%=request.getContextPath()%>/work/workDetailGo.do?wcode=${work.wcode}", '${menu.mcode}');
			},
			error : function(error){
				alert("error : " , error.status);
			}
		});
	}
</script>

<script type="text/x-handlebars-template"  id="replyList-template">
{{#each .}}
<div class="replyLi" >
	<div class="user-block">
		<%-- <img src="<%=request.getContextPath()%>/member/getPicture.do?id={{replyer}}" class="img-circle img-bordered-sm"/> --%>
    </div>
	<div class="timeline-item" >
  		<span class="time">
    		<i class="fa fa-clock"></i>{{dateFormat wrRegdate}}
	 		<a class="btn btn-info btn-xs {{wrno}}-a" id="modifyReplyBtn" data-rno={{wrno}}
				onclick="replyModifyModal('{{wrno}}');"
				style="display:{{VisibleByLoginCheck writer.name}};"
				style="display:visible;"
	    		data-replyer={{writer.name}} data-toggle="modal" data-target="#modal-reply" data-backdrop="false">수정</a>
			<a class="btn btn-danger btn-xs {{wrno}}-a" id="modifyReplyBtn" data-rno={{wrno}}
				onclick="replyRemove('{{wrno}}');"
				style="display:{{VisibleByLoginCheck writer.name}};"
				style="display:visible;"
	    		data-replyer={{writer.name}}>삭제</a>
  		</span>

  		<h3 class="timeline-header">
			<strong style="display:none;">{{wrno}}</strong>{{writer.name}}
			<span style="font-size:12px; margin-left:5px">{{writer.dname}}</span>
		</h3>
  		<div class="timeline-body" id="{{wrno}}-replytext">{{wrContent}} </div>
	</div>
</div>

{{/each}}
</script>

<script type="text/x-handlebars-template"  id="reply-pagination-template" >
<li class="paginate_button page-item">
	<a href="1" aria-controls="example2" data-dt-idx="1" tabindex="0" class="page-link">
		<i class='fas fa-angle-double-left'></i>
	</a>
</li>
<li class="paginate_button page-item">
	<a href="{{#if prev}}{{prevPageNum}}{{/if}}" aria-controls="example2" data-dt-idx="1" tabindex="0" class="page-link">
		<i class='fas fa-angle-left'></i>
	</a>
</li>
{{#each pageNum}}
<li class="paginate_button page-item {{signActive this}} ">
	<a href="javascript:getPage('<%=request.getContextPath()%>/replies/${board.boardNo}/{{this}}',{{this}});" aria-controls="example2" data-dt-idx="1" tabindex="0" class="page-link">
		{{this}}
	</a>
</li>
{{/each}}

<li class="paginate_button page-item ">
	<a href="{{#if next}}{{nextPageNum}}{{/if}}" aria-controls="example2" data-dt-idx="1" tabindex="0" class="page-link">
		<i class='fas fa-angle-right'></i>
	</a>
</li>
<li class="paginate_button page-item">
	<a href="{{realEndPage}}" aria-controls="example2" data-dt-idx="1" tabindex="0" class="page-link">
		<i class='fas fa-angle-double-right'></i>
	</a>
</li>
</script>

<script>
var replyPage = 1;

Handlebars.registerHelper({
	"dateFormat" : function(regDate){
		var d = new Date(regDate),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

    if (month.length < 2)
        month = '0' + month;
    if (day.length < 2)
        day = '0' + day;

    return [year, month, day].join('-');
	},
	"VisibleByLoginCheck":function(replyer){
		var result="none";
		if(replyer == "${loginUser.name}") result="visible";
		return result;
	},
	"signActive":function(pageNum){
		if(pageNum == replyPage) return 'active';
	}
});

function replyModifyModal(wrno){
	//alert(rno);
	//alert($('div#'+rno+'-replytext').text());
	$('div#modal-reply div.modal-body div.row #replytext').val($('div#'+wrno+'-replytext').text());
	$('div#modal-reply div.modal-header h4.modal-title').text(wrno);
}
</script>
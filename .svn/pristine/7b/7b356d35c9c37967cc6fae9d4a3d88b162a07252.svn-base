package kr.or.warehouse.dao;

import java.sql.SQLException;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.BoardVO;
import kr.or.warehouse.dto.ContactgrVO;
import kr.or.warehouse.dto.EmployeeVO;
import kr.or.warehouse.dto.MycontactVO;

@Repository
public class ContactDAOImpl implements ContactDAO{

	@Autowired
	private SqlSession session;


	@Override
	public List<EmployeeVO> selectSearchContactList(Criteria cri) throws SQLException {
		return session.selectList("Contact-Mapper.selectSearchContactList", cri);
	}

	@Override
	public List<EmployeeVO> selectTeamContactList(Criteria cri, String dname) throws SQLException {
		return session.selectList("Contact-Mapper.selectTeamContactList",dname);
	}

	@Override
	public List<EmployeeVO> selectGroupInfoList(Criteria cri,String cogroupcode) throws SQLException {
		return session.selectList("Contact-Mapper.selectGroupInfoList",cogroupcode);
	}

	@Override
	public int selectSearchContactListCount(Criteria cri) throws SQLException {
		return session.selectOne("Contact-Mapper.selectSearchContactListCount",cri);
	}


	//Gr

	@Override
	public String selectContactGrNo() throws SQLException {
		return session.selectOne("Contact-Mapper.selectContactGrNo");
	}


	@Override
	public void insertGroup(ContactgrVO contactgr) throws SQLException {
		session.insert("Contact-Mapper.insertGroup",contactgr);
	}

	@Override
	public void insertGrInfo(MycontactVO mycontact) throws SQLException {
		session.insert("Contact-Mapper.insertGrInfo",mycontact);
	}

	@Override
	public int selectEno(String cogroupcode) throws SQLException {
		return session.selectOne("Contact-Mapper.selectEno",cogroupcode);
	}


	@Override
	public List<EmployeeVO> selectGroupList(Criteria cri) throws SQLException {
		return session.selectList("Contact-Mapper.selectGroupList", cri);
	}


	@Override
	public List<EmployeeVO> selectPersonalList(Criteria cri) throws SQLException {
		return session.selectList("Contact-Mapper.selectPersonalList", cri);
	}

	@Override
	public void deleteGrEmployee(MycontactVO mycontact) throws SQLException {
		 session.delete("Contact-Mapper.deleteGrEmployee",mycontact);
	}












}

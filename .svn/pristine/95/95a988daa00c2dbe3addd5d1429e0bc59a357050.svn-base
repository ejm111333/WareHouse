package kr.or.warehouse.controller.rest;

import java.io.File;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.warehouse.command.MakeFileName;
import kr.or.warehouse.dto.AttachVO;
import kr.or.warehouse.dto.PdsVO;
import kr.or.warehouse.service.PdsService;

@RestController
@RequestMapping("/pds")
public class PdsRestController {
	
	@Autowired
	private PdsService pdsService;
	
	@RequestMapping("/getPds")
	public ResponseEntity<List<PdsVO>> getPds(int eno) throws Exception{
		ResponseEntity<List<PdsVO>> entity = null;

		List<PdsVO> pdsList = null;

		try {
			pdsList = pdsService.getPdsList(eno);
			
			//파일명 재정의
			if(pdsList!=null) {
		      for(PdsVO pds : pdsList) {
		         String fileName = pds.getFileName().split("\\$\\$")[1];
		         pds.setFileName(fileName);
		      }
			}
		      
			entity = new ResponseEntity<List<PdsVO>>(pdsList, HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<List<PdsVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return entity;
	}
	
	@Resource(name = "pdsUserSavePath")
	private String pdsUserSavePath;
	
	@RequestMapping(value = "/regist", method = RequestMethod.POST, produces = "text/plain;charset=utf-8")
	public ResponseEntity<String> regist(PdsVO pds, HttpServletRequest request) throws Exception{
		ResponseEntity<String> entity = null;
		
		//파일저장
		String fileName = MakeFileName.toUUIDFileName(pds.getFileName(), "$$");
		String filePath = pdsUserSavePath+"/"+pds.getEno(); //폴더 내부면 폴더경로 포함해주기
		File target = new File(filePath, fileName); 
		target.mkdirs();
		pds.getUploadFile().transferTo(target);
		
		//db저장
		try {
			//1.pno -> DAO
			//2.eno -> OK
			//3.name
			pds.setFileName(fileName);
			//4.path
			pds.setUploadPath(filePath);
			//5.fileType
			String fileType = pds.getFileName().substring(pds.getFileName().lastIndexOf('.')+1).toLowerCase();
			pds.setFileType(fileType);
			//6.fileSize
			long size = pds.getUploadFile().getSize();
			pds.setFileSize(size+"");
			System.out.println(pds);
			pdsService.uploadFile(pds);
			entity = new ResponseEntity<String>("OK", HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<String>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		
		return entity;
	}
//	
//	@RequestMapping("/detail")
//	public ModelAndView detail(int pno, @RequestParam(defaultValue = "") String from, ModelAndView mnv) throws Exception{
//		String url = "pds/detail";
//		
//		PdsVO pds = null;
//		
//		if(!from.equals("list")) {
//			pds = pdsService.getPds(pno);
//		} else {
//			pds = pdsService.read(pno);
//			url = "redirect:/pds/detail.do?pno=" + pno;
//		}
//		
//		//파일명 재정의
//		if(pds != null) {
//			List<AttachVO> attachList = pds.getAttachList();
//			if(attachList != null) {
//				for(AttachVO attach : attachList) {
//					String fileName = attach.getFileName().split("\\$\\$")[1];
//					attach.setFileName(fileName);
//				}
//			}
//			
//		}
//		
//		mnv.addObject("pds", pds);
//		mnv.setViewName(url);
//		
//		return mnv;
//	}
//	
//	@RequestMapping("/getFile")
//	public String getFile(int ano, Model model) throws Exception{
//		String url ="downloadFile";
//		
//		AttachVO attach = pdsService.getAttachByAno(ano);
//		
//		model.addAttribute("savedPath", attach.getUploadPath());
//		model.addAttribute("fileName", attach.getFileName());
//		
//		return url;
//	}
//	
//	@RequestMapping("/remove")
//	public String remove(int pno, RedirectAttributes rttr) throws Exception{
//		String url = "redirect:/pds/detail.do";
//		
//		List<AttachVO> attachList = pdsService.getPds(pno).getAttachList();
//		if(attachList != null) {
//			for(AttachVO attach : attachList) {
//				File file = new File(attach.getUploadPath(), attach.getFileName());
//				
//				if(file.exists()) {
//					file.delete();
//				}
//			}
//		}
//		
//		pdsService.remove(pno);
//		
//		rttr.addAttribute("pno", pno);
//		rttr.addFlashAttribute("from", "remove");
//		
//		return url;
//	}

}
